"""
    Cisco SD-WAN vManage API

    The vManage API exposes the functionality of operations maintaining devices and the overlay network  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: vmanage@cisco.com
    Generated by: https://openapi-generator.tech
"""


import unittest

import openapi_client
from openapi_client.api.configuration_device_template_api import ConfigurationDeviceTemplateApi  # noqa: E501


class TestConfigurationDeviceTemplateApi(unittest.TestCase):
    """ConfigurationDeviceTemplateApi unit test stubs"""

    def setUp(self):
        self.api = ConfigurationDeviceTemplateApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_attach_device_template(self):
        """Test case for attach_device_template

        """
        pass

    def test_check_vbond(self):
        """Test case for check_vbond

        """
        pass

    def test_create_device_input(self):
        """Test case for create_device_input

        """
        pass

    def test_create_input_without_device(self):
        """Test case for create_input_without_device

        """
        pass

    def test_detach_device_template(self):
        """Test case for detach_device_template

        """
        pass

    def test_detach_sites(self):
        """Test case for detach_sites

        """
        pass

    def test_edit_cloudx_config(self):
        """Test case for edit_cloudx_config

        """
        pass

    def test_get_attached_config_to_device(self):
        """Test case for get_attached_config_to_device

        """
        pass

    def test_get_attached_device_list(self):
        """Test case for get_attached_device_list

        """
        pass

    def test_get_device_configuration_preview(self):
        """Test case for get_device_configuration_preview

        """
        pass

    def test_get_device_list_by_master_template_id(self):
        """Test case for get_device_list_by_master_template_id

        """
        pass

    def test_get_devices_with_duplicate_ip(self):
        """Test case for get_devices_with_duplicate_ip

        """
        pass

    def test_get_devices_with_duplicate_location_name(self):
        """Test case for get_devices_with_duplicate_location_name

        """
        pass

    def test_get_quick_connect_variables(self):
        """Test case for get_quick_connect_variables

        """
        pass

    def test_process_input_comma_sep_file(self):
        """Test case for process_input_comma_sep_file

        """
        pass

    def test_push_cli_template(self):
        """Test case for push_cli_template

        """
        pass

    def test_push_cloudx_config(self):
        """Test case for push_cloudx_config

        """
        pass

    def test_push_master_template(self):
        """Test case for push_master_template

        """
        pass

    def test_push_master_template1(self):
        """Test case for push_master_template1

        """
        pass

    def test_validate_template(self):
        """Test case for validate_template

        """
        pass


if __name__ == '__main__':
    unittest.main()
