"""
    Cisco SD-WAN vManage API

    The vManage API exposes the functionality of operations maintaining devices and the overlay network  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: vmanage@cisco.com
    Generated by: https://openapi-generator.tech
"""


import unittest

import openapi_client
from openapi_client.api.administration_user_and_group_api import AdministrationUserAndGroupApi  # noqa: E501


class TestAdministrationUserAndGroupApi(unittest.TestCase):
    """AdministrationUserAndGroupApi unit test stubs"""

    def setUp(self):
        self.api = AdministrationUserAndGroupApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_colo_group(self):
        """Test case for create_colo_group

        """
        pass

    def test_create_group_grid_columns(self):
        """Test case for create_group_grid_columns

        """
        pass

    def test_create_user(self):
        """Test case for create_user

        """
        pass

    def test_create_user_group(self):
        """Test case for create_user_group

        """
        pass

    def test_create_vpn_group(self):
        """Test case for create_vpn_group

        """
        pass

    def test_delete_colo_group(self):
        """Test case for delete_colo_group

        """
        pass

    def test_delete_user(self):
        """Test case for delete_user

        """
        pass

    def test_delete_user_group(self):
        """Test case for delete_user_group

        """
        pass

    def test_delete_vpn_group(self):
        """Test case for delete_vpn_group

        """
        pass

    def test_edit_colo_group(self):
        """Test case for edit_colo_group

        """
        pass

    def test_edit_vpn_group(self):
        """Test case for edit_vpn_group

        """
        pass

    def test_find_user_auth_type(self):
        """Test case for find_user_auth_type

        """
        pass

    def test_find_user_groups(self):
        """Test case for find_user_groups

        """
        pass

    def test_find_user_groups_as_key_value(self):
        """Test case for find_user_groups_as_key_value

        """
        pass

    def test_find_user_role(self):
        """Test case for find_user_role

        """
        pass

    def test_find_users(self):
        """Test case for find_users

        """
        pass

    def test_get_active_sessions(self):
        """Test case for get_active_sessions

        """
        pass

    def test_get_colo_groups(self):
        """Test case for get_colo_groups

        """
        pass

    def test_get_vpn_groups(self):
        """Test case for get_vpn_groups

        """
        pass

    def test_remove_sessions(self):
        """Test case for remove_sessions

        """
        pass

    def test_reset_user(self):
        """Test case for reset_user

        """
        pass

    def test_resource_group(self):
        """Test case for resource_group

        """
        pass

    def test_resource_group1(self):
        """Test case for resource_group1

        """
        pass

    def test_resource_group2(self):
        """Test case for resource_group2

        """
        pass

    def test_resource_group3(self):
        """Test case for resource_group3

        """
        pass

    def test_resource_group4(self):
        """Test case for resource_group4

        """
        pass

    def test_resource_group_name(self):
        """Test case for resource_group_name

        """
        pass

    def test_update_admin_password(self):
        """Test case for update_admin_password

        """
        pass

    def test_update_password(self):
        """Test case for update_password

        """
        pass

    def test_update_profile_locale(self):
        """Test case for update_profile_locale

        """
        pass

    def test_update_profile_password(self):
        """Test case for update_profile_password

        """
        pass

    def test_update_user(self):
        """Test case for update_user

        """
        pass

    def test_update_user_group(self):
        """Test case for update_user_group

        """
        pass

    def test_validate_password(self):
        """Test case for validate_password

        """
        pass


if __name__ == '__main__':
    unittest.main()
