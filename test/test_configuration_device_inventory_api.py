"""
    Cisco SD-WAN vManage API

    The vManage API exposes the functionality of operations maintaining devices and the overlay network  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: vmanage@cisco.com
    Generated by: https://openapi-generator.tech
"""


import unittest

import openapi_client
from openapi_client.api.configuration_device_inventory_api import ConfigurationDeviceInventoryApi  # noqa: E501


class TestConfigurationDeviceInventoryApi(unittest.TestCase):
    """ConfigurationDeviceInventoryApi unit test stubs"""

    def setUp(self):
        self.api = ConfigurationDeviceInventoryApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_check_self_signed_cert(self):
        """Test case for check_self_signed_cert

        """
        pass

    def test_claim_devices(self):
        """Test case for claim_devices

        """
        pass

    def test_create_device(self):
        """Test case for create_device

        """
        pass

    def test_decommission_vedge_cloud(self):
        """Test case for decommission_vedge_cloud

        """
        pass

    def test_delete_device(self):
        """Test case for delete_device

        """
        pass

    def test_devices_without_subject_sudi(self):
        """Test case for devices_without_subject_sudi

        """
        pass

    def test_edit_device(self):
        """Test case for edit_device

        """
        pass

    def test_form_post(self):
        """Test case for form_post

        """
        pass

    def test_generate_bootstrap_config_for_vedge(self):
        """Test case for generate_bootstrap_config_for_vedge

        """
        pass

    def test_generate_bootstrap_config_for_vedges(self):
        """Test case for generate_bootstrap_config_for_vedges

        """
        pass

    def test_generate_generic_bootstrap_config_for_vedges(self):
        """Test case for generate_generic_bootstrap_config_for_vedges

        """
        pass

    def test_get_all_unclaimed_devices(self):
        """Test case for get_all_unclaimed_devices

        """
        pass

    def test_get_bootstrap_config_zip(self):
        """Test case for get_bootstrap_config_zip

        """
        pass

    def test_get_cloud_dock_data_based_on_device_type(self):
        """Test case for get_cloud_dock_data_based_on_device_type

        """
        pass

    def test_get_cloud_dock_default_config_based_on_device_type(self):
        """Test case for get_cloud_dock_default_config_based_on_device_type

        """
        pass

    def test_get_controller_v_edge_sync_status(self):
        """Test case for get_controller_v_edge_sync_status

        """
        pass

    def test_get_devices_details(self):
        """Test case for get_devices_details

        """
        pass

    def test_get_management_system_ip_info(self):
        """Test case for get_management_system_ip_info

        """
        pass

    def test_get_rma_candidates(self):
        """Test case for get_rma_candidates

        """
        pass

    def test_get_root_cert_status_all(self):
        """Test case for get_root_cert_status_all

        """
        pass

    def test_get_tenant_management_system_ips(self):
        """Test case for get_tenant_management_system_ips

        """
        pass

    def test_invalidate_vmanage_root_ca(self):
        """Test case for invalidate_vmanage_root_ca

        """
        pass

    def test_migrate_device(self):
        """Test case for migrate_device

        """
        pass

    def test_reset_vedge_cloud(self):
        """Test case for reset_vedge_cloud

        """
        pass

    def test_set_life_cycle(self):
        """Test case for set_life_cycle

        """
        pass

    def test_sync_devices(self):
        """Test case for sync_devices

        """
        pass

    def test_sync_root_cert_chain(self):
        """Test case for sync_root_cert_chain

        """
        pass

    def test_update_device_subject_sudi(self):
        """Test case for update_device_subject_sudi

        """
        pass

    def test_validate_user(self):
        """Test case for validate_user

        """
        pass

    def test_validate_user1(self):
        """Test case for validate_user1

        """
        pass


if __name__ == '__main__':
    unittest.main()
